{"version":3,"sources":["fetchFn.js","Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Button/Button.js","Components/Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["searchPics","searchQuery","currentPage","axios","get","then","response","data","hits","Searchbar","state","query","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","src","alt","clickHandle","largeUrl","onClick","ImageGallery","items","handleImageClick","map","item","webformatURL","tags","largeImageURL","id","Button","handleClick","Modal","scrollHeight","onModalOverlayClick","currentTarget","onClose","handleKeyDown","code","window","scrollY","document","body","style","position","addEventListener","setAttribute","removeEventListener","scrollTo","top","App","pictures","isLoading","closeModal","fetchImages","prevState","finally","scroll","behavior","prevProps","renderLoadMoreBtn","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"gZAKaA,EAAa,SAACC,EAAaC,GACtC,OAAOC,IACJC,IADI,UAHQ,sBAGR,qBAJO,qCAIP,cAEkCH,EAFlC,8CAEmFC,IAEvFG,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKC,S,qBCwCvBC,E,4MA7CbC,MAAQ,CACNC,MAAO,I,EAGTC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZH,MAAOE,EAAEE,OAAOC,S,EAIpBC,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKV,MAAMC,OAE/B,EAAKG,SAAS,CACZH,MAAO,M,4CAIX,WACE,OACE,wBAAQU,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaD,SAAUE,KAAKL,aAA5C,UACE,wBAAQM,KAAK,SAASF,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVE,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,SAAUL,KAAKV,wB,GAlCHgB,aCeTC,G,MAjBU,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,YAAaC,EAA1B,EAA0BA,SAA1B,OACvB,oBAAIZ,UAAU,mBAAd,SACE,qBACES,IAAKA,EACLC,IAAKA,EACLV,UAAU,yBACVa,QAAS,kBAAMF,EAAYD,EAAKE,UCavBE,G,MAlBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,iBAAV,OACnB,oBAAIhB,UAAU,eAAd,SACGe,EAAME,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,CAEET,IAAKS,EAAKC,aACVT,IAAKQ,EAAKE,KACVR,SAAUM,EAAKG,cACfV,YAAaK,GAJRE,EAAKI,WCIHC,G,MATA,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OACb,wBAAQtB,KAAK,SAASF,UAAU,SAASa,QAASW,EAAlD,yBC+CaC,G,kNA7CbpC,MAAQ,CACNqC,aAAc,G,EAiBhBC,oBAAsB,SAACnC,GACjBA,EAAEE,SAAWF,EAAEoC,eACjB,EAAK9B,MAAM+B,W,EAIfC,cAAgB,SAACtC,GACA,WAAXA,EAAEuC,MACJ,EAAKjC,MAAM+B,W,uDAvBf,WACE5B,KAAKR,SAAS,CACZiC,aAAcM,OAAOC,UAEvBC,SAASC,KAAKC,MAAMC,SAAW,QAC/BL,OAAOM,iBAAiB,UAAWrC,KAAK6B,iB,kCAE1C,WACEI,SAASC,KAAKI,aAAa,QAAS,IACpCL,SAASM,oBAAoB,UAAWvC,KAAK6B,eAC7CE,OAAOS,SAAS,CACdC,IAAKzC,KAAKZ,MAAMqC,iB,oBAgBpB,WACE,OACE,qBAAK1B,UAAU,UAAUa,QAASZ,KAAK0B,oBAAvC,SACE,qBAAKlB,IAAKR,KAAKH,MAAMW,IAAKC,IAAKT,KAAKH,MAAMY,IAAKV,UAAU,mB,GAlC7CO,cC4FLoC,E,4MAvFbtD,MAAQ,CACNuD,SAAU,GACVhE,YAAa,GACbC,YAAa,EACbgE,WAAW,EACXnB,aAAc,G,EAQhB3B,SAAW,SAACT,GACV,EAAKG,SAAS,CACZb,YAAaU,EACbT,YAAa,EACb+D,SAAU,M,EAId5B,iBAAmB,SAACN,EAAKE,GACvB,EAAKnB,SAAS,CACZmB,SAAUA,EACVF,IAAKA,K,EAGToC,WAAa,WACX,EAAKrD,SAAS,CACZmB,SAAU,M,EAIdmC,YAAc,WACZ,MAAqC,EAAK1D,MAAlCT,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,YACrB,EAAKY,SAAS,CACZoD,WAAW,EACXnB,aAAcQ,SAASC,KAAKT,aAAe,MAG7C/C,EAAWC,EAAaC,GACrBG,MAAK,SAACE,GACL,EAAKO,UAAS,SAACuD,GAAD,MAAgB,CAC5BJ,SAAS,GAAD,mBAAMI,EAAUJ,UAAhB,YAA6B1D,IACrCL,YAAamE,EAAUnE,YAAc,SAGxCoE,SAAQ,WACP,EAAKC,SACL,EAAKzD,SAAS,CAAEoD,WAAW,Q,EAGjCK,OAAS,WACPlB,OAAOS,SAAS,CACdC,IAAK,EAAKrD,MAAMqC,aAChByB,SAAU,Y,wDA/Cd,SAAmBC,EAAWJ,GACxBA,EAAUpE,cAAgBqB,KAAKZ,MAAMT,aACvCqB,KAAK8C,gB,oBAiDT,WACE,MAA+C9C,KAAKZ,MAA5CuD,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAAWjC,EAA7B,EAA6BA,SAAUF,EAAvC,EAAuCA,IACjC2C,EAAoBpD,KAAKZ,MAAMuD,SAASU,OAAS,IAAMT,EAC7D,OACE,sBAAK7C,UAAU,MAAf,UACE,cAAC,EAAD,CAAWD,SAAUE,KAAKF,WACzB6C,EAASU,OAAS,GACjB,cAAC,EAAD,CACEvC,MAAO6B,EACP5B,iBAAkBf,KAAKe,mBAG1B6B,GACC,sBAAK7C,UAAU,SAAf,UACE,yBACA,yBACA,4BAGHqD,GAAqB,cAAC,EAAD,CAAQ7B,YAAavB,KAAK8C,cAC/CnC,GACC,cAAC,EAAD,CAAOH,IAAKG,EAAUF,IAAKA,EAAKmB,QAAS5B,KAAK6C,oB,GAjFtCvC,aCIHgD,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBzE,MAAK,YAAkD,IAA/C0E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/B,SAASgC,eAAe,SAM1BX,M","file":"static/js/main.26a65e1a.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst APY_KEY = \"21066802-1751d875d52f6494cef1e0048\";\nconst BASE_URL = \"https://pixabay.com\";\n\nexport const searchPics = (searchQuery, currentPage) => {\n  return axios\n    .get(\n      `${BASE_URL}/api/?key=${APY_KEY}&q=${searchQuery}&image_type=photo&per_page=12&page=${currentPage}`\n    )\n    .then((response) => response.data.hits);\n};\n\n// export default { fetchImages }\n","import PropTypes from \"prop-types\";\nimport { Component } from \"react\";\nimport \"./Searchbar.css\";\n\nclass Searchbar extends Component {\n  state = {\n    query: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      query: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.query);\n\n    this.setState({\n      query: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import PropTypes from \"prop-types\";\nimport \"./ImageGalleryItem.css\";\nconst ImageGalleryItem = ({ src, alt, clickHandle, largeUrl }) => (\n  <li className=\"ImageGalleryItem\">\n    <img\n      src={src}\n      alt={alt}\n      className=\"ImageGalleryItem-image\"\n      onClick={() => clickHandle(alt, largeUrl)}\n    />\n  </li>\n);\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  clickHandle: PropTypes.func.isRequired,\n  largeUrl: PropTypes.string.isRequired,\n};\nexport default ImageGalleryItem;\n","import PropTypes from \"prop-types\";\nimport ImageGalleryItem from \"../ImageGalleryItem\";\nimport \"./ImageGallery.css\";\nconst ImageGallery = ({ items, handleImageClick }) => (\n  <ul className=\"ImageGallery\">\n    {items.map((item) => (\n      <ImageGalleryItem\n        key={item.id}\n        src={item.webformatURL}\n        alt={item.tags}\n        largeUrl={item.largeImageURL}\n        clickHandle={handleImageClick}\n      />\n    ))}\n  </ul>\n);\n\nImageGallery.propTypes = {\n  items: PropTypes.array.isRequired,\n  handleImageClick: PropTypes.func.isRequired,\n};\nexport default ImageGallery;\n","import PropTypes from \"prop-types\";\nimport \"./Button.css\";\nconst Button = ({ handleClick }) => (\n  <button type=\"button\" className=\"Button\" onClick={handleClick}>\n    Load more\n  </button>\n);\n\nButton.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\nexport default Button;\n","import PropTypes from \"prop-types\";\nimport { Component } from \"react\";\nimport \"./Modal.css\";\n\nclass Modal extends Component {\n  state = {\n    scrollHeight: 0,\n  };\n  componentDidMount() {\n    this.setState({\n      scrollHeight: window.scrollY,\n    });\n    document.body.style.position = \"fixed\";\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n  componentWillUnmount() {\n    document.body.setAttribute(\"style\", \"\");\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n    window.scrollTo({\n      top: this.state.scrollHeight,\n    });\n  }\n\n  onModalOverlayClick = (e) => {\n    if (e.target === e.currentTarget) {\n      this.props.onClose();\n    }\n  };\n\n  handleKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"Overlay\" onClick={this.onModalOverlayClick}>\n        <img src={this.props.src} alt={this.props.alt} className=\"ModalImg\" />\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import { Component } from \"react\";\nimport { searchPics } from \"./fetchFn\";\nimport \"./App.css\";\nimport Searchbar from \"./Components/Searchbar\";\nimport ImageGallery from \"./Components/ImageGallery\";\nimport Button from \"./Components/Button\";\nimport Modal from \"./Components/Modal\";\n\nclass App extends Component {\n  state = {\n    pictures: [],\n    searchQuery: \"\",\n    currentPage: 1,\n    isLoading: false,\n    scrollHeight: 0,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages();\n    }\n  }\n  onSubmit = (query) => {\n    this.setState({\n      searchQuery: query,\n      currentPage: 1,\n      pictures: [],\n    });\n  };\n\n  handleImageClick = (alt, largeUrl) => {\n    this.setState({\n      largeUrl: largeUrl,\n      alt: alt,\n    });\n  };\n  closeModal = () => {\n    this.setState({\n      largeUrl: \"\",\n    });\n  };\n\n  fetchImages = () => {\n    const { searchQuery, currentPage } = this.state;\n    this.setState({\n      isLoading: true,\n      scrollHeight: document.body.scrollHeight - 150,\n    });\n\n    searchPics(searchQuery, currentPage)\n      .then((data) => {\n        this.setState((prevState) => ({\n          pictures: [...prevState.pictures, ...data],\n          currentPage: prevState.currentPage + 1,\n        }));\n      })\n      .finally(() => {\n        this.scroll();\n        this.setState({ isLoading: false });\n      });\n  };\n  scroll = () => {\n    window.scrollTo({\n      top: this.state.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  render() {\n    const { pictures, isLoading, largeUrl, alt } = this.state;\n    const renderLoadMoreBtn = this.state.pictures.length > 0 && !isLoading;\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.onSubmit}></Searchbar>\n        {pictures.length > 0 && (\n          <ImageGallery\n            items={pictures}\n            handleImageClick={this.handleImageClick}\n          />\n        )}\n        {isLoading && (\n          <div className=\"loader\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n        )}\n        {renderLoadMoreBtn && <Button handleClick={this.fetchImages} />}\n        {largeUrl && (\n          <Modal src={largeUrl} alt={alt} onClose={this.closeModal} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}